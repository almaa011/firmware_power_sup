
# This file is generated by hitl_msg_gen.py

from messages.abstract_message import AbstractMessage

import can  # pip install python-can    

class TritiumMotorDrive(AbstractMessage):

    can_id = 0x121
    length = 8
    period = 0.0  # TODO: not implemented yet!

    @property
    def motor_velocity(self):
        return self._get_float(byte=0)

    @motor_velocity.setter
    def motor_velocity(self, value):
        self._set_float(byte=0, value=value)

    @property
    def motor_current(self):
        return self._get_float(byte=4)

    @motor_current.setter
    def motor_current(self, value):
        self._set_float(byte=4, value=value)


class TritiumMotorPower(AbstractMessage):

    can_id = 0x122
    length = 8
    period = 0.0  # TODO: not implemented yet!

    @property
    def reserved(self):
        return self._get_float(byte=0)

    @reserved.setter
    def reserved(self, value):
        self._set_float(byte=0, value=value)

    @property
    def bus_current(self):
        return self._get_float(byte=4)

    @bus_current.setter
    def bus_current(self, value):
        self._set_float(byte=4, value=value)


class TritiumReset(AbstractMessage):

    can_id = 0x123
    length = 8
    period = 0.0  # TODO: not implemented yet!

    @property
    def unused1(self):
        return self._get_float(byte=0)

    @unused1.setter
    def unused1(self, value):
        self._set_float(byte=0, value=value)

    @property
    def unused2(self):
        return self._get_float(byte=4)

    @unused2.setter
    def unused2(self, value):
        self._set_float(byte=4, value=value)
