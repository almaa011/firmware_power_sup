
# This file is generated by hitl_msg_gen.py

from messages.abstract_message import AbstractMessage

import can  # pip install python-can    

class SteeringPressCount(AbstractMessage):

    can_id = 0x240
    length = 8
    period = 0.0  # TODO: not implemented yet!

    @property
    def button0(self):
        return self._get_uint8(byte=0)

    @button0.setter
    def button0(self, value):
        self._set_uint8(byte=0, value=value)

    @property
    def button1(self):
        return self._get_uint8(byte=1)

    @button1.setter
    def button1(self, value):
        self._set_uint8(byte=1, value=value)

    @property
    def button2(self):
        return self._get_uint8(byte=2)

    @button2.setter
    def button2(self, value):
        self._set_uint8(byte=2, value=value)

    @property
    def button3(self):
        return self._get_uint8(byte=3)

    @button3.setter
    def button3(self, value):
        self._set_uint8(byte=3, value=value)

    @property
    def button4(self):
        return self._get_uint8(byte=4)

    @button4.setter
    def button4(self, value):
        self._set_uint8(byte=4, value=value)

    @property
    def button5(self):
        return self._get_uint8(byte=5)

    @button5.setter
    def button5(self, value):
        self._set_uint8(byte=5, value=value)

    @property
    def button6(self):
        return self._get_uint8(byte=6)

    @button6.setter
    def button6(self, value):
        self._set_uint8(byte=6, value=value)

    @property
    def button7(self):
        return self._get_uint8(byte=7)

    @button7.setter
    def button7(self, value):
        self._set_uint8(byte=7, value=value)


class SteeringButtonColors(AbstractMessage):

    can_id = 0x241
    length = 8
    period = 0.0  # TODO: not implemented yet!

    @property
    def button0(self):
        return self._get_uint8(byte=0)

    @button0.setter
    def button0(self, value):
        self._set_uint8(byte=0, value=value)

    @property
    def button1(self):
        return self._get_uint8(byte=1)

    @button1.setter
    def button1(self, value):
        self._set_uint8(byte=1, value=value)

    @property
    def button2(self):
        return self._get_uint8(byte=2)

    @button2.setter
    def button2(self, value):
        self._set_uint8(byte=2, value=value)

    @property
    def button3(self):
        return self._get_uint8(byte=3)

    @button3.setter
    def button3(self, value):
        self._set_uint8(byte=3, value=value)

    @property
    def button4(self):
        return self._get_uint8(byte=4)

    @button4.setter
    def button4(self, value):
        self._set_uint8(byte=4, value=value)

    @property
    def button5(self):
        return self._get_uint8(byte=5)

    @button5.setter
    def button5(self, value):
        self._set_uint8(byte=5, value=value)

    @property
    def button6(self):
        return self._get_uint8(byte=6)

    @button6.setter
    def button6(self, value):
        self._set_uint8(byte=6, value=value)

    @property
    def button7(self):
        return self._get_uint8(byte=7)

    @button7.setter
    def button7(self, value):
        self._set_uint8(byte=7, value=value)


class SteeringHorn(AbstractMessage):

    can_id = 0x242
    length = 1
    period = 0.0  # TODO: not implemented yet!

    @property
    def horn(self):
        return self._get_uint8(byte=0)

    @horn.setter
    def horn(self, value):
        self._set_uint8(byte=0, value=value)
