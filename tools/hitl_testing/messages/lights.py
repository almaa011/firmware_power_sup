
# This file is generated by hitl_msg_gen.py

from messages.abstract_message import AbstractMessage

import can  # pip install python-can    

class VisionStatusFront(AbstractMessage):

    can_id = 0x2b6
    length = 4
    period = 0.0  # TODO: not implemented yet!

    @property
    def left_turn_signal(self):
        return self._get_bitfield(byte=0, pos=0)

    @left_turn_signal.setter
    def left_turn_signal(self, value):
        self._set_bitfield(byte=0, pos=0, value=value)

    @property
    def right_turn_signal(self):
        return self._get_bitfield(byte=0, pos=1)

    @right_turn_signal.setter
    def right_turn_signal(self, value):
        self._set_bitfield(byte=0, pos=1, value=value)

    @property
    def brake_lights(self):
        return self._get_bitfield(byte=0, pos=2)

    @brake_lights.setter
    def brake_lights(self, value):
        self._set_bitfield(byte=0, pos=2, value=value)

    @property
    def headlights(self):
        return self._get_bitfield(byte=0, pos=3)

    @headlights.setter
    def headlights(self, value):
        self._set_bitfield(byte=0, pos=3, value=value)

    @property
    def high_beams(self):
        return self._get_bitfield(byte=0, pos=4)

    @high_beams.setter
    def high_beams(self, value):
        self._set_bitfield(byte=0, pos=4, value=value)

    @property
    def spare_1(self):
        return self._get_bitfield(byte=0, pos=5)

    @spare_1.setter
    def spare_1(self, value):
        self._set_bitfield(byte=0, pos=5, value=value)

    @property
    def spare_2(self):
        return self._get_bitfield(byte=0, pos=6)

    @spare_2.setter
    def spare_2(self, value):
        self._set_bitfield(byte=0, pos=6, value=value)

    @property
    def spare_3(self):
        return self._get_bitfield(byte=0, pos=7)

    @spare_3.setter
    def spare_3(self, value):
        self._set_bitfield(byte=0, pos=7, value=value)

    @property
    def horn(self):
        return self._get_bitfield(byte=1, pos=0)

    @horn.setter
    def horn(self, value):
        self._set_bitfield(byte=1, pos=0, value=value)

    @property
    def spare(self):
        return self._get_bitfield(byte=1, pos=1)

    @spare.setter
    def spare(self, value):
        self._set_bitfield(byte=1, pos=1, value=value)

    @property
    def left(self):
        return self._get_bitfield(byte=2, pos=0)

    @left.setter
    def left(self, value):
        self._set_bitfield(byte=2, pos=0, value=value)

    @property
    def right(self):
        return self._get_bitfield(byte=2, pos=1)

    @right.setter
    def right(self, value):
        self._set_bitfield(byte=2, pos=1, value=value)

    @property
    def rear(self):
        return self._get_bitfield(byte=2, pos=2)

    @rear.setter
    def rear(self, value):
        self._set_bitfield(byte=2, pos=2, value=value)

    @property
    def array_front_0(self):
        return self._get_bitfield(byte=3, pos=0)

    @array_front_0.setter
    def array_front_0(self, value):
        self._set_bitfield(byte=3, pos=0, value=value)

    @property
    def array_front_1(self):
        return self._get_bitfield(byte=3, pos=1)

    @array_front_1.setter
    def array_front_1(self, value):
        self._set_bitfield(byte=3, pos=1, value=value)

    @property
    def array_rear_0(self):
        return self._get_bitfield(byte=3, pos=2)

    @array_rear_0.setter
    def array_rear_0(self, value):
        self._set_bitfield(byte=3, pos=2, value=value)

    @property
    def array_rear_1(self):
        return self._get_bitfield(byte=3, pos=3)

    @array_rear_1.setter
    def array_rear_1(self, value):
        self._set_bitfield(byte=3, pos=3, value=value)


class VisionStatusRear(AbstractMessage):

    can_id = 0x2b7
    length = 4
    period = 0.0  # TODO: not implemented yet!

    @property
    def left_turn_signal(self):
        return self._get_bitfield(byte=0, pos=0)

    @left_turn_signal.setter
    def left_turn_signal(self, value):
        self._set_bitfield(byte=0, pos=0, value=value)

    @property
    def right_turn_signal(self):
        return self._get_bitfield(byte=0, pos=1)

    @right_turn_signal.setter
    def right_turn_signal(self, value):
        self._set_bitfield(byte=0, pos=1, value=value)

    @property
    def brake_lights(self):
        return self._get_bitfield(byte=0, pos=2)

    @brake_lights.setter
    def brake_lights(self, value):
        self._set_bitfield(byte=0, pos=2, value=value)

    @property
    def headlights(self):
        return self._get_bitfield(byte=0, pos=3)

    @headlights.setter
    def headlights(self, value):
        self._set_bitfield(byte=0, pos=3, value=value)

    @property
    def high_beams(self):
        return self._get_bitfield(byte=0, pos=4)

    @high_beams.setter
    def high_beams(self, value):
        self._set_bitfield(byte=0, pos=4, value=value)

    @property
    def spare_1(self):
        return self._get_bitfield(byte=0, pos=5)

    @spare_1.setter
    def spare_1(self, value):
        self._set_bitfield(byte=0, pos=5, value=value)

    @property
    def spare_2(self):
        return self._get_bitfield(byte=0, pos=6)

    @spare_2.setter
    def spare_2(self, value):
        self._set_bitfield(byte=0, pos=6, value=value)

    @property
    def spare_3(self):
        return self._get_bitfield(byte=0, pos=7)

    @spare_3.setter
    def spare_3(self, value):
        self._set_bitfield(byte=0, pos=7, value=value)

    @property
    def horn(self):
        return self._get_bitfield(byte=1, pos=0)

    @horn.setter
    def horn(self, value):
        self._set_bitfield(byte=1, pos=0, value=value)

    @property
    def spare(self):
        return self._get_bitfield(byte=1, pos=1)

    @spare.setter
    def spare(self, value):
        self._set_bitfield(byte=1, pos=1, value=value)

    @property
    def left(self):
        return self._get_bitfield(byte=2, pos=0)

    @left.setter
    def left(self, value):
        self._set_bitfield(byte=2, pos=0, value=value)

    @property
    def right(self):
        return self._get_bitfield(byte=2, pos=1)

    @right.setter
    def right(self, value):
        self._set_bitfield(byte=2, pos=1, value=value)

    @property
    def rear(self):
        return self._get_bitfield(byte=2, pos=2)

    @rear.setter
    def rear(self, value):
        self._set_bitfield(byte=2, pos=2, value=value)

    @property
    def array_front_0(self):
        return self._get_bitfield(byte=3, pos=0)

    @array_front_0.setter
    def array_front_0(self, value):
        self._set_bitfield(byte=3, pos=0, value=value)

    @property
    def array_front_1(self):
        return self._get_bitfield(byte=3, pos=1)

    @array_front_1.setter
    def array_front_1(self, value):
        self._set_bitfield(byte=3, pos=1, value=value)

    @property
    def array_rear_0(self):
        return self._get_bitfield(byte=3, pos=2)

    @array_rear_0.setter
    def array_rear_0(self, value):
        self._set_bitfield(byte=3, pos=2, value=value)

    @property
    def array_rear_1(self):
        return self._get_bitfield(byte=3, pos=3)

    @array_rear_1.setter
    def array_rear_1(self, value):
        self._set_bitfield(byte=3, pos=3, value=value)
